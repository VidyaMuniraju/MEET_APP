{"version":3,"sources":["Event.js","logo.svg","EventList.js","CitySearch.js","NumberOfEvents.js","App.js","reportWebVitals.js","index.js"],"names":["Event","state","toggleDetails","hideDetails","setState","event","this","props","className","summary","description","start","dateTime","location","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numberofevents","changeEventNumber","App","currentLocation","eventCount","getEvents","then","filteredEvents","slice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.836d22a0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    toggleDetails: false,\n  }\n\n  hideDetails = () => {\n    if(!this.state.toggleDetails) {\n      this.setState({\n        toggleDetails: true,\n      })\n    }\n    else {\n      this.setState({\n        toggleDetails: false,\n      })\n    }\n  }\n\n  render() {\n    const { event } = this.props;\n    return <div className=\"event\">\n      <p className=\"summary\">{event.summary}</p>\n      <p className=\"description\">{event.description}</p>\n      <p className=\"start-time\">{event.start.dateTime}</p>\n      <p className=\"location\">{event.location}</p>\n      <button className=\"hide-details\" onClick={() => this.hideDetails()}>\n      Hide Details\n      </button>\n\n\n    </div>;\n  }\n}\nexport default Event;","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react';\nimport Event from './Event'; \n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n    <ul className=\"EventList\">\n      {events.map(event =>\n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n      )}\n    </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: false\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    })\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  }\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input type=\"text\" className=\"city\" value={this.state.query} onChange={this.handleInputChanged} onFocus={() => { this.setState({ showSuggestions: true }) }} />\n\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n              <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\n            ))}\n          <li onClick={() => this.handleItemClicked('all')}  key='all'>\n            <b>See all cities</b>\n          </li>\n          \n        </ul>\n\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from \"react\";\n\nclass NumberOfEvents extends Component {\n\n  state = {\n    numberofevents: 32,\n  }\n\n  changeEventNumber = (event) => {\n    this.setState({\n      numberofevents: event.target.value\n    });\n    this.props.updateEvents(null, event.target.value);\n  };\n\n  render() {\n    return (\n      <div className=\"no-of-events\">\n        <input type=\"text\" className=\"numberOfEvents\"\n        value={this.state.numberofevents}\n        onChange={this.changeEventNumber}\n        ></input>\n      </div>\n    )\n  }\n\n}\n\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport \"./nprogress.css\";\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberofevents: 32,\n    currentLocation: 'all'\n  }\n\n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberofevents } = this.state;\n    if(location) {\n      getEvents().then((events) => {\n        const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n        const filteredEvents = locationEvents.slice(0, numberofevents);\n        this.setState({\n          events: filteredEvents,\n          currentLocation: location,\n        });\n      });\n    }\n    else {\n      getEvents().then((events) => {\n        const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === currentLocation);\n        const filteredEvents = locationEvents.slice(0, eventCount);\n        this.setState({\n          events: filteredEvents,\n          numberofevents: eventCount,\n        });\n      });      \n    }\n  };\n\n  // componentDidMount() {\n  //   this.mounted = true;\n  //   getEvents().then((events) => {\n  //     if (this.mounted) {\n  //       this.setState({ events, locations: extractLocations(events) });\n  //     } \n  //   });\n  // }\n\n  // componentWillUnmount() {\n  //   this.mounted = false;\n  // }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents numberofevents={this.state.numberofevents} updateEvents={this.updateEvents} />\n      </div>\n  );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}